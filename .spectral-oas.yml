functions:
  - camara-language-avoid-telco
functionsDir: "./lint_function"
rules:
  camara-language-avoid-telco:
    message: "{{error}}"
    severity: hint
    description: |
      This rule checks for telco-specific terminology in your API definitions and suggests more inclusive terms.
    given: "$..*.*"
    then:
      function: camara-language-avoid-telco
  camara-operationid-casing-convention:
    message: Operation Id must be in Camel case "{{error}}"
    severity: hint
    description: |
        This rule checks Operation ids should follow a specific case convention: camel case.
    given: "$.paths.*.*.operationId"
    then:
      function: casing
      functionOptions:
        type: camel
  camara-schema-casing-convention:
    description: This rule checks schema should follow a specific case convention pascal case.
    message: "{{property}} should be pascal (uppper camel case)"
    severity: warn
    given: $.components.schemas[*]~
    then:
      function: pattern
      functionOptions:
        match: "^([A-Z][a-z0-9]*([A-Z][a-z0-9]*)*)$"
  camara-parameter-casing-convention:
    description: Paths should be kebab-case.
    severity: error
    message: "{{property}} is not kebab-case: {{error}}"
    given: $.paths[*]~
    then:
      function: pattern
      functionOptions:
        match: "^\/([a-z0-9]+(-[a-z0-9]+)*)?(\/[a-z0-9]+(-[a-z0-9]+)*|\/{.+})*$"  # doesn't allow /asasd{asdas}sadas pattern or not closed braces
  camara-http-methods:
    description: "Ensure that all path URLs have valid HTTP methods (GET, PUT, POST, DELETE, PATCH, OPTIONS)."
    message: "Invalid HTTP method for '{{path}}'. Must be one of get, put, post, delete, patch, options."
    severity: error
    given: "".paths.*.*"
    then:
      function: pattern
      functionOptions:
        match: "^(get|put|post|delete|patch|options)$"
